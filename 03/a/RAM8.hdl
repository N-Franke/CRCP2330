// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address, a=a, b=b, c=c, d=d, e=e, f=f, g=g, h=h);

    Register(in=in, load=a, out=a1);  //000
    Register(in=in, load=b, out=a2);  //001
    Register(in=in, load=c, out=a3);  //010
    Register(in=in, load=d, out=a4);  //011
    Register(in=in, load=e, out=a5);  //100
    Register(in=in, load=f, out=a6);  //101
    Register(in=in, load=g, out=a7);  //110
    Register(in=in, load=h, out=a8);  //111
  
    Mux8Way16(a=a1, b=a2, c=a3, d=a4, e=a5, f=a6, g=a7, h=a8, sel=address, out=out);
}